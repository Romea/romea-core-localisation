#ifndef romea_ParticleUpdaterPosition_hpp
#define romea_ParticleUpdaterPosition_hpp

//romea
#include <time/Time.hpp>
#include <particle/ParticleFilterUpdater.hpp>
#include <math/NormalRandomMatrixGenerator.hpp>
#include "../../ObservationPosition.hpp"
#include "../../LocalisationFSMState.hpp"
#include "../R2WLevelArmCompensation.hpp"
#include "R2WParticleState.hpp"

namespace romea {


class R2WParticleUpdaterPosition : public ParticleFilterUpdater<R2WParticleLocalisationState,ObservationPosition,LocalisationFSMState,ParticleFilterResampling<double>,Duration>
{

public :

  using Array2X =Eigen::Array<double,2,Eigen::Dynamic,Eigen::RowMajor>;
  using Array1X = Eigen::Array<double, 1,Eigen::Dynamic, Eigen::RowMajor>;

public :

  R2WParticleUpdaterPosition(const std::string & name,
                             const size_t & numberOfParticles,
                             const bool &disableUpdateFunction);

  virtual void update(const Duration & duration,
                      const ObservationPosition & currentObservation,
                      LocalisationFSMState & currentFSMState,
                      R2WParticleLocalisationState & currentState)override;

private :

  virtual bool update_(const Duration & duration,
                       const ObservationPosition & currentObservation,
                       R2WParticleLocalisationState & currentState);

  virtual bool set_(const Duration & duration,
                    const ObservationPosition & currentObservation,
                    R2WParticleLocalisationState & currentState);

  void computeLevelArms_(ObservationPosition const & ObservationPosition,
                        R2WParticleLocalisationState & currentState);

  void setParticlePositions_(ObservationPosition const & ObservationPosition,
                            R2WParticleLocalisationState & currentState);

  void applyLevelArmCompentations_(R2WParticleLocalisationState & currentState);


private :

  LevelArmCompensation levelArmCompensation_;
  Array2X levelArms_;
  Array1X cosCourses_;
  Array1X sinCourses_;


};

}

#endif





